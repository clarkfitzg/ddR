% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ddR.R
\name{useBackend}
\alias{useBackend}
\title{Set the current backend}
\usage{
useBackend(name = "parallel", ...)
}
\arguments{
\item{name}{character naming the desired backend}

\item{...}{additional parameters to pass to the initialization function of the driver.}
}
\value{
driver of class \code{\linkS4class{ddRDriver}} which is the new
     current global ddR driver
}
\description{
After calling this function, all
subsequent dmapply, collect, and parts operations will dispatch through
the new driver instance to run on this new backend.
}
\details{
Best practice is to \code{\link{shutdown}} the current backend before
calling this function. This frees system resources and makes it clear
that the previous backend will no longer be used.

With the current implementation, distributed objects created with a
different driver instance prior to switching can no longer be computed
on, even if the backends are the same.
}
\examples{
\dontrun{
useBackend("parallel", executors=2)
shutdown()  # We're done using the parallel backend
library(distributedR.ddR); useBackend("distributedR")
}
}
\references{
Prasad, S., Fard, A., Gupta, V., Martinez, J., LeFevre, J., Xu, V., Hsu, M., Roy, I.
Large scale predictive analytics in Vertica: Fast data transfer, distributed model creation
and in-database prediction. _Sigmod 2015_, 1657-1668.

Venkataraman, S., Bodzsar, E., Roy, I., AuYoung, A., and
Schreiber, R. (2013) Presto: Distributed Machine Learning and
Graph Processing with Sparse Matrices. _EuroSys 2013_, 197-210.

Homepage: https://github.com/vertica/ddR
}
\seealso{
\code{\link{available_backends}}, \code{\link{shutdown}}
}

